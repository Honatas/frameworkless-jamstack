<div class="p-4 text-justify">
  <div id="tech-area" class="mx-auto mb-3">
    <p class="mb-2">
      
    </p>
    <p class="mb-2">
      There are innumerous ways to achieve this, given the vast options of libraries to choose from. However, putting them all together does not go
      effortless, and this is where just booting up a project using a well-known framework comes handy. The problem here though, is that bundled
      with the frameworks come a lot of functionality we do not need. Also, such frameworks tend to be opinionated, taking off your freedom of coding.  
    </p>
    <p class="mb-2">
      In this proof of concept I have tried to use unopinionated libraries as much as possible. Also, have in mind that this is not a one size fits
      all project, it is more of a starting point upon which to build your own applications and have freedom to include and/or remove any functionality
      as you seem fit.  
    </p>
    <p class="font-bold text-lg">&bull; Building</p>
    <p class="mb-2">
      First of all: we need a build tool, because transpiling and bundling a whole project on the command line can be complicated. I've chosen
      <a href="https://gulpjs.com" target="_blank" class="text-blue-600">Gulp</a>, not only because it is imperative and unopinionated, but also because
      it offers a vast amount of plugins - including a hot-reload development server called
      <a href="https://www.npmjs.com/package/gulp-connect" target="_blank" class="text-blue-600">gulp-connect</a>.  
    </p>
    <p class="font-bold text-lg">&bull; Language</p>
    <p class="mb-2">
      Second: we need <a href="https://www.typescriptlang.org" target="_blank" class="text-blue-600">Typescript</a> because, well ... thing is, if you
      don't love Typescript, it is because you don't know it yet. Typescript enforces modular programming, so we also need a module bundler to be able to
      transport these modules to the browser. For this task, I've chosen <a href="https://rollupjs.org" target="_blank" class="text-blue-600">RollupJS</a>.  
    </p>
    <p class="font-bold text-lg">&bull; Templating</p>
    <p class="mb-2">
      And third: we need a template engine, because our pages have to be dynamic. <a href="https://jinja.palletsprojects.com" target="_blank" class="text-blue-600">Jinja2</a>
      is the best template engine out there, but sadly for us it was written in Python. <a href="https://mozilla.github.io/nunjucks" target="_blank" class="text-blue-600">Nunjucks</a>
      is the best attempt to port it to javascript, but apparently the project is unfinished and unmaintained. So in the end I have chosen
      <a href="https://handlebarsjs.com" target="_blank" class="text-blue-600">Handlebars</a> much because of its popularity. It is not as good as Jinja but it can get the job done.  
    </p>
    <p class="font-bold text-lg">&bull; Styling</p>
    <p class="mb-2">
      Finally, to spice things up a bit, I've added <a href="https://tailwindcss.com" target="_blank" class="text-blue-600">Tailwind CSS</a> to the jam.
      We could go with only pure css, but having all this power and not taking advantage of a css preprocessor
      (<a href="https://postcss.org" target="_blank" class="text-blue-600">PostCSS</a> in this case) just seemed wrong. Also, unlike
      <a href="https://getbootstrap.com" target="_blank" class="text-blue-600">Bootstrap</a>, Tailwind is not a framework.  
    </p>
    <p class="font-bold text-lg">&bull; To sum it up</p>
    <p class="mb-2">
      In the end this is just an example. You can (and should) choose any tool you feel comfortable with. Can you use Webpack instead of Gulp? Sure you can. Heck,
      you could even go with Bootstrap 4 and jQuery if that's what your heart desires. The point here is: <span class="font-bold">you own the code</span>, and by
      doing so, you reduce <a href="https://martinfowler.com/bliki/TechnicalDebt.html" target="_blank" class="text-blue-600">Technical Debt</a>.  
    </p>
  </div>
</div>
